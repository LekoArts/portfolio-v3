---
import type { HTMLAttributes } from 'astro/types'
import type { DataEntryMap } from 'astro:content'
import { artImageWrapperStyle, artImageStyle } from './art-image.css'

type ImageUrls = DataEntryMap['art3d'][string]['data']['imageUrls']

interface Props extends HTMLAttributes<'div'> {
	imageUrls: ImageUrls
	alt?: string
	imgClass?: string
}

const getSrcSet = (imageUrls: ImageUrls) => {
	const { '640px': sm, '800px': md, '1024px': lg } = imageUrls

	return `
    ${lg!.url} ${lg!.width}w,
    ${md!.url} ${md!.width}w,
    ${sm!.url} ${sm!.width}w
  `
}

const { imageUrls, alt, class: className, imgClass, ...rest } = Astro.props

const src = imageUrls['1024px']!.url
const { width: maxWidth, height: maxHeight } = imageUrls['1024px']!
const aspectRatio = maxWidth / maxHeight
---

<div class:list={[artImageWrapperStyle, className]} {...rest}>
	<img
		loading="lazy"
		decoding="async"
		src={src}
		sizes={`(min-width: ${maxWidth}px) ${maxWidth}px, 100vw`}
		srcset={getSrcSet(imageUrls)}
		alt={alt ?? ''}
		class:list={[artImageStyle, imgClass]}
		style={{
			maxWidth: `${maxWidth}px`,
			maxHeight: `${maxHeight}px`,
			aspectRatio: `${aspectRatio} / 1`,
			width: '100%',
		}}
	/>
</div>
