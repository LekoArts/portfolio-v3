---
import type { HTMLAttributes } from 'astro/types'
import Box from '@components/primitives/box.astro'
import { copyButtonStyle } from './copy.css'
import VisuallyHidden from '@components/a11y/visually-hidden.astro'

interface Props extends HTMLAttributes<'button'> {
	codeId: string
	duration?: number
	fileName?: string
}

const { codeId, duration = 5000, fileName = '' } = Astro.props

const initialLabel = `${fileName ? `${fileName}: ` : ``}Copy code to clipboard`
---

<lekoarts-copy-button data-duration={duration} data-filename={fileName} data-code-id={codeId}>
	<Box as="button" name={initialLabel} disabled={false} px={2} borderRadius="md" class={copyButtonStyle}>
		<span class="copy-button-text">Copy</span>
		<VisuallyHidden class="copy-button-label" aria-roledescription="status">{initialLabel}</VisuallyHidden>
	</Box>
</lekoarts-copy-button>

<script>
	import { copyToClipboard } from '@utils/copy-to-clipboard'

	class LekoArtsCopy extends HTMLElement {
		constructor() {
			super()

			const button = this.querySelector('button') as HTMLButtonElement
			const copyText = this.querySelector('.copy-button-text') as HTMLElement
			const a11yLabel = this.querySelector('.copy-button-label') as HTMLElement
			const codeId = this.dataset.codeId as string
			const duration = Number.parseInt(this.dataset.duration as string)
			const fileName = this.dataset.filename

			const codeTag = document.querySelector(`pre[data-code-id="${codeId}"]`)?.firstChild

			let content = ''

			if (codeTag) {
				content = codeTag.textContent || ''
			}

			const copyLabel = `${fileName ? `${fileName}: ` : ''}Copy code to clipboard`
			const copiedLabel = `${fileName ? `${fileName} ` : ''}Copied to clipboard`

			button.addEventListener('click', async () => {
				await copyToClipboard(content)

				button.disabled = true
				copyText.textContent = 'Copied'
				button.name = copiedLabel
				a11yLabel.textContent = copiedLabel

				setTimeout(() => {
					button.disabled = false
					copyText.textContent = 'Copy'
					button.name = copyLabel
					a11yLabel.textContent = copyLabel
				}, duration)
			})
		}
	}

	customElements.define('lekoarts-copy-button', LekoArtsCopy)
</script>
