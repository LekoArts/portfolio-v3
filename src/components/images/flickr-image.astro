---
import type { HTMLAttributes } from 'astro/types'
import { flickrImageStyle } from './flickr-image.css'
import type { FlickrImageUrls } from '@constants/types'
import { getSrcSet } from '@utils/images'

interface Props extends HTMLAttributes<'div'> {
	imageUrls: FlickrImageUrls
	alt?: string
}

const { imageUrls, alt, class: className, ...rest } = Astro.props

const urls = imageUrls['1024px']

if (!urls) {
	throw new Error('No image URLs provided to flickr-image component.')
}

const src = urls.url
const { width: maxWidth, height: maxHeight } = urls
const aspectRatio = maxWidth / maxHeight
---

<img
	loading="lazy"
	decoding="async"
	src={src}
	sizes={`(min-width: ${maxWidth}px) ${maxWidth}px, 100vw`}
	srcset={getSrcSet(imageUrls)}
	alt={alt ?? ''}
	class:list={[className, flickrImageStyle]}
	style={{
		maxWidth: `${maxWidth}px`,
		maxHeight: `${maxHeight}px`,
		aspectRatio: `${aspectRatio} / 1`,
		width: '100%',
	}}
	{...rest}
/>
