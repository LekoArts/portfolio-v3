---
import type { InferGetStaticPropsType, GetStaticPaths } from 'astro'
import { Image } from '@unpic/astro'
import { getCollection } from 'astro:content'
import type { CardProps } from '@constants/types'
import { getDistinctCategories, getSortedWriting } from '@utils/collection'
import CategoryView from '@components/writing/category-view.astro'
import CategoryHero from '@components/writing/category-hero.astro'
import { slugify } from '@utils/slugify'

export const getStaticPaths = (async () => {
	const categories = getDistinctCategories(await getCollection('categories'))

	let routes = []

	for (const category of categories) {
		const posts = getSortedWriting(
			await getCollection('writing', ({ data }) => {
				return data.category.id === category.id
			}),
		)

		routes.push({
			params: { category: category.slug },
			props: { posts, entry: category },
		})
	}

	return routes
}) satisfies GetStaticPaths

type Props = InferGetStaticPropsType<typeof getStaticPaths>

const { entry, posts: _posts } = Astro.props
const category = entry.data

const posts: Array<CardProps> = _posts.map((post) => ({
	title: post.data.title,
	subtitle: post.data.subtitle,
	description: post.data.description,
	slug: slugify(post.slug, entry.id),
}))
---

<CategoryView
	posts={posts}
	title={`${category.name} articles`}
	description={category.description}
	breadcrumbListItems={[{ name: category.name, url: entry.slug }]}
	><CategoryHero title={category.name} description={category.description} bgGradient={category.gradient}
		><Image slot="image" alt="" src={category.image} width={350} /></CategoryHero
	></CategoryView
>
