---
import Base from '@layouts/base.astro'
import PhotographyText from '@assets/photography-body.mdx'
import SkipNavContent from '@components/a11y/skip-nav-content.astro'
import Container from '@components/primitives/container.astro'
import Prose from '@components/typography/prose.astro'
import Seo from '@components/seo.astro'
import Spacer from '@components/primitives/spacer.astro'
import { explanationLayoutWrapperStyle, layoutIconStyle } from './_photos.css'
import Text from '@components/typography/text.astro'
import Box from '@components/primitives/box.astro'
import SvgIcon from '@components/primitives/svg-icon.astro'
import Button from '@components/primitives/button/base.astro'
import TagGroup from '@components/blocks/tag-group.astro'
import ArtImage from '@components/art/art-image.astro'
import { getCollection } from 'astro:content'

const LAYOUT_TYPES = [`masonry`, `grid`, `list`] as const

const photosets = await getCollection('photography')

const photosetTitles = photosets.map((photoset) => photoset.data.title).sort((a, b) => a.localeCompare(b))
const photos = photosets.flatMap((photoset) =>
	photoset.data.photos.map((photo) => ({ ...photo, photoset_title: photoset.data.title })),
)
---

<Base>
	<Seo
		slot="seo"
		title="Photography"
		description="With my Fujifilm cameras and lenses I primarily shoot landscape photography. I love Fuji's color science and enjoy editing my photos with Capture One."
		breadcrumbListItems={[{ name: `Photos`, url: `/photos/` }]}
	/>
	<SkipNavContent>
		<Container paddingTop={16}>
			<Prose>
				<h1>Photography</h1>
				<PhotographyText />
			</Prose>
			<Spacer axis="vertical" size={6} />
			<div class={explanationLayoutWrapperStyle}>
				<Text variant="prominent">Select individual albums to filter photos:</Text>
				<Box display="flex" flexDirection="row" alignItems="center" gap={4}>
					<Text variant="prominent">Layout:</Text>
					<Box display="flex" flexDirection="row" gap={1}>
						{
							LAYOUT_TYPES.map((layoutType) => {
								const title = `Switch to "${layoutType}" layout`

								return (
									<Button
										data-layout={layoutType}
										title={title}
										aria-label={title}
										variant="ghost"
										size="sm"
										class:list={[layoutIconStyle, 'button-layout']}
									>
										<SvgIcon height="1.25em" width="1.25em" id={layoutType} />
									</Button>
								)
							})
						}
					</Box>
				</Box>
			</div>
			<Spacer axis="vertical" size={6} />
			<TagGroup id="photography" items={photosetTitles} />
		</Container>
		<Spacer size={20} axis="vertical" />
		<div id="photography-img-wrapper">
			{
				photos.map((photo) => (
					<ArtImage
						alt={photo.description}
						imageUrls={photo.imageUrls}
						class="tag-group-item"
						data-tags={photo.photoset_title}
					/>
				))
			}
		</div>
		<Spacer axis="vertical" size={[20, null, null, 24]} />
	</SkipNavContent>
</Base>

<script>
	import type { LayoutType } from '@stores/ui'
	import { artImageStyle } from '@components/art/art-image.css'
	import { $ui } from '@stores/ui'
	import { gridImagesVariants, imageWrapperVariants } from './_photos.css'

	const layoutButtons = document.querySelectorAll<HTMLButtonElement>('.button-layout')
	const imgWrapper = document.getElementById('photography-img-wrapper') as HTMLElement
	const images = imgWrapper.querySelectorAll('img')

	layoutButtons.forEach((btn) => {
		btn.addEventListener('click', () => {
			$ui.setKey('photographyLayout', btn.dataset.layout as LayoutType)
		})
	})

	$ui.subscribe(({ photographyLayout }) => {
		imgWrapper.className = imageWrapperVariants[photographyLayout]

		images.forEach((img) => {
			img.className = `${gridImagesVariants[photographyLayout]} ${artImageStyle}`
		})

		layoutButtons.forEach((btn) => {
			btn.classList.toggle('active', btn.dataset.layout === photographyLayout)
		})
	})
</script>
